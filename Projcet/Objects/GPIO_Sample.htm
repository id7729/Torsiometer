<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\GPIO_Sample.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\GPIO_Sample.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Dec 05 13:50:21 2023
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Task_Screen &rArr; Menu_Pro &rArr; SCREENprintf &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[9]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">HardFault_Handler</a><BR>
 <LI><a href="#[a]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">MemManage_Handler</a><BR>
 <LI><a href="#[b]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">BusFault_Handler</a><BR>
 <LI><a href="#[c]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">UsageFault_Handler</a><BR>
 <LI><a href="#[d]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SVC_Handler</a><BR>
 <LI><a href="#[e]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">DebugMon_Handler</a><BR>
 <LI><a href="#[f]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SysTick_Handler</a><BR>
 <LI><a href="#[46]">EFlash_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">EFlash_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3d]">ACMP0_IRQHandler</a> from ac78xx_acmp.o(i.ACMP0_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[3e]">ACMP1_IRQHandler</a> from ac78xx_acmp.o(i.ACMP1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[3c]">ADC_IRQHandler</a> from ac78xx_adc.o(i.ADC_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[30]">BKP_IRQHandler</a> from ac78xx_rtc.o(i.BKP_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[b]">BusFault_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[3a]">CAN1_Handler</a> from ac78xx_can.o(i.CAN1_Handler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[3b]">CAN2_Handler</a> from ac78xx_can.o(i.CAN2_Handler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[2b]">DMA10_IRQHandler</a> from ac78xx_dma.o(i.DMA10_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[2c]">DMA11_IRQHandler</a> from ac78xx_dma.o(i.DMA11_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[2d]">DMA12_IRQHandler</a> from ac78xx_dma.o(i.DMA12_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[22]">DMA1_IRQHandler</a> from ac78xx_dma.o(i.DMA1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[23]">DMA2_IRQHandler</a> from ac78xx_dma.o(i.DMA2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[24]">DMA3_IRQHandler</a> from ac78xx_dma.o(i.DMA3_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[25]">DMA4_IRQHandler</a> from ac78xx_dma.o(i.DMA4_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[26]">DMA5_IRQHandler</a> from ac78xx_dma.o(i.DMA5_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[27]">DMA6_IRQHandler</a> from ac78xx_dma.o(i.DMA6_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[28]">DMA7_IRQHandler</a> from ac78xx_dma.o(i.DMA7_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[29]">DMA8_IRQHandler</a> from ac78xx_dma.o(i.DMA8_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[2a]">DMA9_IRQHandler</a> from ac78xx_dma.o(i.DMA9_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[e]">DebugMon_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[46]">EFlash_IRQHandler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[18]">EXTI0_IRQHandler</a> from ac78xx_gpio.o(i.EXTI0_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[38]">EXTI10_15_IRQHandler</a> from ac78xx_gpio.o(i.EXTI10_15_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[19]">EXTI1_IRQHandler</a> from ac78xx_gpio.o(i.EXTI1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1a]">EXTI2_IRQHandler</a> from ac78xx_gpio.o(i.EXTI2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1b]">EXTI3_IRQHandler</a> from ac78xx_gpio.o(i.EXTI3_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1c]">EXTI4_IRQHandler</a> from ac78xx_gpio.o(i.EXTI4_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1d]">EXTI5_9_IRQHandler</a> from ac78xx_gpio.o(i.EXTI5_9_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[9]">HardFault_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[20]">I2C1_IRQHandler</a> from ac78xx_i2c.o(i.I2C1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[21]">I2C2_IRQHandler</a> from ac78xx_i2c.o(i.I2C2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[37]">LIN0_Handler</a> from ac78xx_lin.o(i.LIN0_Handler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1]">Led_Control_Task</a> from demo.o(i.Led_Control_Task) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[a]">MemManage_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[8]">NMI_Handler</a> from ac78xx_spm.o(i.NMI_Handler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[36]">PVD_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[11]">PWDT_IRQHandler</a> from ac78xx_pwdt.o(i.PWDT_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[33]">PWM0_IRQHandler</a> from ac78xx_pwm.o(i.PWM0_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[34]">PWM1_IRQHandler</a> from ac78xx_pwm.o(i.PWM1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[35]">PWM2_IRQHandler</a> from ac78xx_pwm.o(i.PWM2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[45]">PWM3_IRQHandler</a> from ac78xx_pwm.o(i.PWM3_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[f]">PendSV_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[5]">RGY_Light_Task</a> from demo.o(i.RGY_Light_Task) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[31]">RTC_IRQHandler</a> from ac78xx_rtc.o(i.RTC_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[7]">Reset_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from ac78xx_spi.o(i.SPI1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from ac78xx_spi.o(i.SPI2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[39]">SPM_IRQHandler</a> from ac78xx_spm.o(i.SPM_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[d]">SVC_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[0]">SendRequst</a> from demo.o(i.SendRequst) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[4]">Show_Ceiling_Floor_Value_Task</a> from demo.o(i.Show_Ceiling_Floor_Value_Task) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[3]">Show_Torsional_Value_Task</a> from demo.o(i.Show_Torsional_Value_Task) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[6]">Speaker_Task</a> from demo.o(i.Speaker_Task) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[10]">SysTick_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[48]">SystemInit</a> from system_ac78xx.o(i.SystemInit) referenced from startup_ac78xx.o(.text)
 <LI><a href="#[4c]">TIM1_Task</a> from timer.o(i.TIM1_Task) referenced from timer.o(i.Timer_Init)
 <LI><a href="#[2e]">TIMER0_IRQHandler</a> from ac78xx_timer.o(i.TIMER0_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[2f]">TIMER1_IRQHandler</a> from ac78xx_timer.o(i.TIMER1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[3f]">TIMER2_IRQHandler</a> from ac78xx_timer.o(i.TIMER2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[40]">TIMER3_IRQHandler</a> from ac78xx_timer.o(i.TIMER3_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[41]">TIMER4_IRQHandler</a> from ac78xx_timer.o(i.TIMER4_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[42]">TIMER5_IRQHandler</a> from ac78xx_timer.o(i.TIMER5_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[43]">TIMER6_IRQHandler</a> from ac78xx_timer.o(i.TIMER6_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[44]">TIMER7_IRQHandler</a> from ac78xx_timer.o(i.TIMER7_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[2]">Task_Screen</a> from demo.o(i.Task_Screen) referenced 2 times from round_robin_sche.o(.data)
 <LI><a href="#[12]">UART1_IRQHandler</a> from ac78xx_uart.o(i.UART1_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[13]">UART2_IRQHandler</a> from ac78xx_uart.o(i.UART2_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[14]">UART3_IRQHandler</a> from ac78xx_uart.o(i.UART3_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[15]">UART4_IRQHandler</a> from ac78xx_uart.o(i.UART4_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[16]">UART5_IRQHandler</a> from ac78xx_uart.o(i.UART5_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[17]">UART6_IRQHandler</a> from ac78xx_uart.o(i.UART6_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[4a]">UART_IRQHandler</a> from rs485_driver.o(i.UART_IRQHandler) referenced from rs485_driver.o(i.RS485_Init)
 <LI><a href="#[4b]">Uart6_IRQHandler</a> from dmg80480c043_01wtc.o(i.Uart6_IRQHandler) referenced from dmg80480c043_01wtc.o(i.SCREENInit)
 <LI><a href="#[c]">UsageFault_Handler</a> from startup_ac78xx.o(.text) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[32]">Watchdog_IRQHandler</a> from ac78xx_wdg.o(i.Watchdog_IRQHandler) referenced from startup_ac78xx.o(RESET)
 <LI><a href="#[49]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ac78xx.o(.text)
 <LI><a href="#[4d]">fputc</a> from ac78xx_debugout.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[47]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[49]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ba]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[bb]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[bc]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[bd]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[be]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[bf]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EFlash_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFlash_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EFlash_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PVD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ac78xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENHandle
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENVarMalloc
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VarMalloc
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENVarMalloc
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control_Task
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control_Task
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speaker_Task
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGY_Light_Task
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Torsional_Value_Task
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control_Task
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_f2ulz</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ffixul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speaker_Task
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGY_Light_Task
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control_Task
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speaker_Task
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGY_Light_Task
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[54]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c9]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_acmp.o(i.ACMP0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_acmp.o(i.ACMP1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ACMP1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>ADC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_adc.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>BKP_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ac78xx_rtc.o(i.BKP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BKP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_can.o(i.CAN1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CAN1_Handler &rArr; CAN_HandleEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_HandleEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN2_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_can.o(i.CAN2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CAN2_Handler &rArr; CAN_HandleEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_HandleEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CAN_HandleEvent</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, ac78xx_can.o(i.CAN_HandleEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CAN_HandleEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCanIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_Handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Handler
</UL>

<P><STRONG><a name="[ab]"></a>CKGEN_Enable</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ac78xx_ckgen.o(i.CKGEN_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CKGEN_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ModuleEnable
</UL>

<P><STRONG><a name="[62]"></a>CKGEN_SetAPBClockDivider</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetAPBClockDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetAPBClockDivider &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[64]"></a>CKGEN_SetPLLReference</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetPLLReference))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetPLLReference &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[65]"></a>CKGEN_SetPllFeedbackDiv</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetPllFeedbackDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetPllFeedbackDiv &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
</UL>

<P><STRONG><a name="[66]"></a>CKGEN_SetPllPostDiv</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetPllPostDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetPllPostDiv &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
</UL>

<P><STRONG><a name="[67]"></a>CKGEN_SetPllPrevDiv</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetPllPrevDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetPllPrevDiv &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
</UL>

<P><STRONG><a name="[68]"></a>CKGEN_SetSFlashClock</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ac78xx_ckgen.o(i.CKGEN_SetSFlashClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CKGEN_SetSFlashClock &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[69]"></a>CKGEN_SetSysclkDiv</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetSysclkDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetSysclkDiv &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[6a]"></a>CKGEN_SetSysclkSrc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_ckgen.o(i.CKGEN_SetSysclkSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKGEN_SetSysclkSrc &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[ac]"></a>CKGEN_SoftReset</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ac78xx_ckgen.o(i.CKGEN_SoftReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CKGEN_SoftReset
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ModuleEnable
</UL>

<P><STRONG><a name="[2b]"></a>DMA10_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA10_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA11_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA11_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA11_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA12_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA12_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA12_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA2_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA3_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA3_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA4_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA4_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA5_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA5_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA6_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA6_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA7_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA7_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA8_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA8_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA9_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_dma.o(i.DMA9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA9_IRQHandler &rArr; DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DMA_ClearFlag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ac78xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelHardRst
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA9_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA8_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA7_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA6_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA5_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA4_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA3_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA12_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA11_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA10_IRQHandler
</UL>

<P><STRONG><a name="[18]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ac78xx_gpio.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI0_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ac78xx_gpio.o(i.EXTI10_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI10_15_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingIRQMask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ac78xx_gpio.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI1_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ac78xx_gpio.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI2_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ac78xx_gpio.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI3_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ac78xx_gpio.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI4_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ac78xx_gpio.o(i.EXTI5_9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI5_9_IRQHandler &rArr; GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingIRQMask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPendingExtIntGPIONum
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearPendingExtInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>GPIO_ClearPendingExtInt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_ClearPendingExtInt))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>GPIO_GetPMUXConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_GetPMUXConfig))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetFunc
</UL>

<P><STRONG><a name="[6d]"></a>GPIO_GetPendingExtIntGPIONum</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, ac78xx_gpio.o(i.GPIO_GetPendingExtIntGPIONum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_GetPendingExtIntGPIONum
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>GPIO_GetPendingIRQMask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_GetPendingIRQMask))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>GPIO_ResetPinBits</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ac78xx_gpio.o(i.GPIO_ResetPinBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetPinBits
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetGPIOxBRRx
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_2A_WTN6
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_SendString
</UL>

<P><STRONG><a name="[72]"></a>GPIO_SetDir</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ac78xx_gpio.o(i.GPIO_SetDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_SetDir
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetGPIOxMODE
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_WTN6040
</UL>

<P><STRONG><a name="[74]"></a>GPIO_SetFunc</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, ac78xx_gpio.o(i.GPIO_SetFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_SetFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPMUXConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMUX_SetPMUXxPFSELx
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENInit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[77]"></a>GPIO_SetPinBits</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ac78xx_gpio.o(i.GPIO_SetPinBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetPinBits
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetGPIOxBSRRx
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_2A_WTN6
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_SendString
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_TASK
</UL>

<P><STRONG><a name="[79]"></a>GPIO_SetPinValue</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ac78xx_gpio.o(i.GPIO_SetPinValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_SetPinValue
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetGPIOxODRx
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_2A_WTN6
</UL>

<P><STRONG><a name="[20]"></a>I2C1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_i2c.o(i.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClrStatus1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C2_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ac78xx_i2c.o(i.I2C2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClrStatus1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>InitDelay</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_ac78xx.o(i.InitDelay))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_WTN6040
</UL>

<P><STRONG><a name="[7c]"></a>Init_WTN6040</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wtn6040.o(i.Init_WTN6040))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init_WTN6040 &rArr; GPIO_SetDir
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDelay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>LED_Init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, led.o(i.LED_Init))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>LED_TASK</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, led.o(i.LED_TASK))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_TASK &rArr; GPIO_SetPinBits
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Task
</UL>

<P><STRONG><a name="[37]"></a>LIN0_Handler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ac78xx_lin.o(i.LIN0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LIN0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>Led_Control</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, led.o(i.Led_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sustain_FloorLed_ON
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sustain_CeilingLed_ON
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control_Task
</UL>

<P><STRONG><a name="[1]"></a>Led_Control_Task</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, demo.o(i.Led_Control_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Led_Control_Task &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>Line_2A_WTN6</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, wtn6040.o(i.Line_2A_WTN6))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Line_2A_WTN6 &rArr; udelay &rArr; SysTickRepeatDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinValue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPinBits
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speaker_Task
</UL>

<P><STRONG><a name="[85]"></a>Menu_Pro</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, workmode.o(i.Menu_Pro))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Menu_Pro &rArr; SCREENprintf &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENprintf
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREEN_CLEAR_INF
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sustain_FloorLed_ON
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sustain_CeilingLed_ON
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Screen
</UL>

<P><STRONG><a name="[8]"></a>NMI_Handler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ac78xx_spm.o(i.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NMI_Handler &rArr; CKGEN_SetSysclkSrc &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_GetModuleWakeupSourceFlag
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_EnableXOSC
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_EnablePLL
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSysclkSrc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSysclkDiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPLLReference
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetAPBClockDivider
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PWDT_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_pwdt.o(i.PWDT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWDT_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PWM0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_pwm.o(i.PWM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PWM1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_pwm.o(i.PWM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PWM2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_pwm.o(i.PWM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>PWM3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ac78xx_pwm.o(i.PWM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>RGY_Light_Task</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, demo.o(i.RGY_Light_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RGY_Light_Task &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>RS485_Init</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, rs485_driver.o(i.RS485_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RS485_Init &rArr; UART_Init &rArr; UART_SetBaudrate &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetEventCallback
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetFunc
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>RTC_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ac78xx_rtc.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClrRTIF
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClrRPIF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>SCREENHandle</STRONG> (Thumb, 470 bytes, Stack size 32 bytes, dmg80480c043_01wtc.o(i.SCREENHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Screen
</UL>

<P><STRONG><a name="[97]"></a>SCREENInit</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, dmg80480c043_01wtc.o(i.SCREENInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SCREENInit &rArr; UART_Init &rArr; UART_SetBaudrate &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetEventCallback
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>SCREENVarMalloc</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, dmg80480c043_01wtc.o(i.SCREENVarMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SCREENVarMalloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VarMalloc
</UL>

<P><STRONG><a name="[8d]"></a>SCREENWriteVarCmd</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, dmg80480c043_01wtc.o(i.SCREENWriteVarCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENprintf
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREEN_CLEAR_INF
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Torsional_Value_Task
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Ceiling_Floor_Value_Task
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGY_Light_Task
</UL>

<P><STRONG><a name="[89]"></a>SCREEN_CLEAR_INF</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dmg80480c043_01wtc.o(i.SCREEN_CLEAR_INF))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SCREEN_CLEAR_INF &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Pro
</UL>

<P><STRONG><a name="[86]"></a>SCREENprintf</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, dmg80480c043_01wtc.o(i.SCREENprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SCREENprintf &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Pro
</UL>

<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ac78xx_spi.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ac78xx_spi.o(i.SPI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>SPM_EnablePLL</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, ac78xx_spm.o(i.SPM_EnablePLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPM_EnablePLL
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[8b]"></a>SPM_EnableXOSC</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, ac78xx_spm.o(i.SPM_EnableXOSC))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPM_EnableXOSC
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[8a]"></a>SPM_GetModuleWakeupSourceFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ac78xx_spm.o(i.SPM_GetModuleWakeupSourceFlag))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[39]"></a>SPM_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ac78xx_spm.o(i.SPM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_GetModuleWakeupSourceFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>SendRequst</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, demo.o(i.SendRequst))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendRequst &rArr; UART5_SendString &rArr; GPIO_ResetPinBits
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_SendString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[a2]"></a>SetEflashClock</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, system_ac78xx.o(i.SetEflashClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEflashClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[9e]"></a>SetHSEClock</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, system_ac78xx.o(i.SetHSEClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetHSEClock &rArr; CKGEN_SetSysclkSrc &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_EnableXOSC
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPM_EnablePLL
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSysclkSrc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSysclkDiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPllPrevDiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPllPostDiv
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPllFeedbackDiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPLLReference
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[9f]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_ac78xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetSysClock &rArr; SetHSEClock &rArr; CKGEN_SetSysclkSrc &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHSEClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4]"></a>Show_Ceiling_Floor_Value_Task</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, demo.o(i.Show_Ceiling_Floor_Value_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Show_Ceiling_Floor_Value_Task &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>Show_Torsional_Value_Task</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, demo.o(i.Show_Torsional_Value_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Show_Torsional_Value_Task &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>Speaker_Task</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, demo.o(i.Speaker_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Speaker_Task &rArr; Line_2A_WTN6 &rArr; udelay &rArr; SysTickRepeatDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_2A_WTN6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[87]"></a>Sustain_CeilingLed_ON</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, workmode.o(i.Sustain_CeilingLed_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Sustain_CeilingLed_ON &rArr; Led_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Pro
</UL>

<P><STRONG><a name="[88]"></a>Sustain_FloorLed_ON</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, workmode.o(i.Sustain_FloorLed_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Sustain_FloorLed_ON &rArr; Led_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Pro
</UL>

<P><STRONG><a name="[48]"></a>SystemInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, system_ac78xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetHSEClock &rArr; CKGEN_SetSysclkSrc &rArr; WriteBitsValue
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEflashClock
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSFlashClock
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetAPBClockDivider
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>TIM1_Task</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, timer.o(i.TIM1_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM1_Task &rArr; LED_TASK &rArr; GPIO_SetPinBits
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemarks
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetIntFlag
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ClrIntFlag
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Wait_Respond_Timeout
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Wait_One_Frame
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_TASK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(i.Timer_Init)
</UL>
<P><STRONG><a name="[2e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIMER7_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>TIMER_ClrIntFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ac78xx_timer.o(i.TIMER_ClrIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Task
</UL>

<P><STRONG><a name="[a3]"></a>TIMER_GetIntFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ac78xx_timer.o(i.TIMER_GetIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Task
</UL>

<P><STRONG><a name="[a8]"></a>TIMER_Init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, ac78xx_timer.o(i.TIMER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIMER_Init &rArr; TIMER_ModuleEnable &rArr; CKGEN_SoftReset
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ModuleEnable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[a9]"></a>TIMER_ModuleEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ac78xx_timer.o(i.TIMER_ModuleEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER_ModuleEnable &rArr; CKGEN_SoftReset
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SoftReset
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
</UL>

<P><STRONG><a name="[ae]"></a>TIMER_SetCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ac78xx_timer.o(i.TIMER_SetCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[b8]"></a>TaskProcess</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, round_robin_sche.o(i.TaskProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TaskProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>TaskRemarks</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, round_robin_sche.o(i.TaskRemarks))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Task
</UL>

<P><STRONG><a name="[2]"></a>Task_Screen</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, demo.o(i.Task_Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Task_Screen &rArr; Menu_Pro &rArr; SCREENprintf &rArr; SCREENWriteVarCmd &rArr; SCREENHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENHandle
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Pro
</UL>
<BR>[Address Reference Count : 1]<UL><LI> round_robin_sche.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>Task_Wait_One_Frame</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, timer.o(i.Task_Wait_One_Frame))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Task
</UL>

<P><STRONG><a name="[a5]"></a>Task_Wait_Respond_Timeout</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, timer.o(i.Task_Wait_Respond_Timeout))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Task
</UL>

<P><STRONG><a name="[ad]"></a>Timer_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, timer.o(i.Timer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Timer_Init &rArr; TIMER_Init &rArr; TIMER_ModuleEnable &rArr; CKGEN_SoftReset
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_SetCallback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>UART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART1_IRQHandler &rArr; UART_InterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_IRQHandler &rArr; UART_InterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART3_IRQHandler &rArr; UART_InterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART4_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART4_IRQHandler &rArr; UART_InterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART5_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART5_IRQHandler &rArr; UART_InterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>UART5_SendString</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, rs485_driver.o(i.UART5_SendString))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART5_SendString &rArr; GPIO_ResetPinBits
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPinBits
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinBits
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRequst
</UL>

<P><STRONG><a name="[17]"></a>UART6_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART6_IRQHandler &rArr; UART_InterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>UART_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, rs485_driver.o(i.UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs485_driver.o(i.RS485_Init)
</UL>
<P><STRONG><a name="[90]"></a>UART_Init</STRONG> (Thumb, 314 bytes, Stack size 16 bytes, ac78xx_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UART_Init &rArr; UART_SetBaudrate &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SoftReset
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_Enable
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetParity
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetDataBits
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENInit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[b2]"></a>UART_SetBaudrate</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, ac78xx_uart.o(i.UART_SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_SetBaudrate &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[91]"></a>UART_SetEventCallback</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ac78xx_uart.o(i.UART_SetEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SetEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENInit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[4b]"></a>Uart6_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, dmg80480c043_01wtc.o(i.Uart6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Uart6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dmg80480c043_01wtc.o(i.SCREENInit)
</UL>
<P><STRONG><a name="[b4]"></a>VarMalloc</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, varmalloc.o(i.VarMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = VarMalloc &rArr; SCREENVarMalloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENVarMalloc
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>Watchdog_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ac78xx_wdg.o(i.Watchdog_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Watchdog_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ac78xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>WriteBitsValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, system_ac78xx.o(i.WriteBitsValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteBitsValue
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSysclkSrc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSysclkDiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetSFlashClock
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPllPrevDiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPllPostDiv
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPllFeedbackDiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetPLLReference
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKGEN_SetAPBClockDivider
</UL>

<P><STRONG><a name="[b5]"></a>__0printf$5</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cc]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[95]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENHandle
</UL>

<P><STRONG><a name="[cd]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ce]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[cf]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4d]"></a>fputc</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, ac78xx_debugout.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[9c]"></a>itoa</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, dmg80480c043_01wtc.o(i.itoa))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENprintf
</UL>

<P><STRONG><a name="[47]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = main &rArr; SCREENInit &rArr; UART_Init &rArr; UART_SetBaudrate &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VarMalloc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskProcess
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENInit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_WTN6040
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[99]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENVarMalloc
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VarMalloc
</UL>

<P><STRONG><a name="[83]"></a>mdelay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, system_ac78xx.o(i.mdelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mdelay &rArr; SysTickRepeatDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickRepeatDelay
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_2A_WTN6
</UL>

<P><STRONG><a name="[84]"></a>udelay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, system_ac78xx.o(i.udelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = udelay &rArr; SysTickRepeatDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickRepeatDelay
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_2A_WTN6
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9b]"></a>UART_SendData</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dmg80480c043_01wtc.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCREENWriteVarCmd
</UL>

<P><STRONG><a name="[61]"></a>GetCanIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ac78xx_can.o(i.GetCanIndex))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_HandleEvent
</UL>

<P><STRONG><a name="[6c]"></a>DMA_ChannelHardRst</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ac78xx_dma.o(i.DMA_ChannelHardRst))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>

<P><STRONG><a name="[71]"></a>GPIO_SetGPIOxBRRx</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_SetGPIOxBRRx))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetPinBits
</UL>

<P><STRONG><a name="[78]"></a>GPIO_SetGPIOxBSRRx</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_SetGPIOxBSRRx))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinBits
</UL>

<P><STRONG><a name="[73]"></a>GPIO_SetGPIOxMODE</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_SetGPIOxMODE))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_SetGPIOxODRx</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.GPIO_SetGPIOxODRx))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinValue
</UL>

<P><STRONG><a name="[76]"></a>PMUX_SetPMUXxPFSELx</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, ac78xx_gpio.o(i.PMUX_SetPMUXxPFSELx))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetFunc
</UL>

<P><STRONG><a name="[7b]"></a>I2C_ClrStatus1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ac78xx_i2c.o(i.I2C_ClrStatus1))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>RTC_ClrRPIF</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ac78xx_rtc.o(i.RTC_ClrRPIF))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>RTC_ClrRTIF</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ac78xx_rtc.o(i.RTC_ClrRTIF))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ac78xx_timer.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
</UL>

<P><STRONG><a name="[af]"></a>UART_InterruptHandler</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ac78xx_uart.o(i.UART_InterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_InterruptHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>UART_SetDataBits</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, ac78xx_uart.o(i.UART_SetDataBits))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[b1]"></a>UART_SetParity</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, ac78xx_uart.o(i.UART_SetParity))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[a1]"></a>SysTickDelay</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, system_ac78xx.o(i.SysTickDelay))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickRepeatDelay
</UL>

<P><STRONG><a name="[a0]"></a>SysTickRepeatDelay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, system_ac78xx.o(i.SysTickRepeatDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTickRepeatDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdelay
</UL>

<P><STRONG><a name="[b6]"></a>_printf_core</STRONG> (Thumb, 660 bytes, Stack size 104 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
